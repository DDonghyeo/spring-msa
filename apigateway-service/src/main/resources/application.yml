server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage : Spring Cloud Gateway Global Filter
            preLogger : true
            postLogger : true
      routes:
        - id: user-service #Login Uri
          uri: lb://USER-SERVICE # Load Balancer
          predicates:
            - Path=/user/login #login의 경우
            - Method:POST #Method가 POST인 경우
          filters:
            - RemoveRequestHeader=Cookie #POST로 전달되는 데이터를 매번 새로운 데이터로 인식하기 위해 Cookie 초기화
            - RewritePath=/user/(?<segment>.*), /$\{segment} # Rewrite Path

        - id: user-service
          uri: lb://USER-SERVICE # Load Balancer
          predicates:
            - Path=/user/create #회원가입
            - Method:POST #Method가 POST인 경우
          filters:
            - RemoveRequestHeader=Cookie #POST로 전달되는 데이터를 매번 새로운 데이터로 인식하기 위해 Cookie 초기화
            - RewritePath=/user/(?<segment>.*), /$\{segment} # Rewrite Path

        - id: user-service
          uri: lb://USER-SERVICE # Load Balancer
          predicates:
            - Path=/user/** #로그인, 회원가입 이외의 요청들
            - Method:GET
          filters:
            - RemoveRequestHeader=Cookie #POST로 전달되는 데이터를 매번 새로운 데이터로 인식하기 위해 Cookie 초기화
            - RewritePath=/user/(?<segment>.*), /$\{segment} # Rewrite Path
            - AuthorizationHeaderFilter #인가 정보가 필요한 요청 -> 인가 필터 적용

        - id: app-service
          uri: lb://APP-SERVICE
          predicates:
            - Path=/app/**
          filters:
#            - AddRequestHeader=App-Request-Header, App Service Request
#            - AddResponseHeader=App-Response-Header, App Service Response
            - name : CustomFilter




